/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package softeng;
import java.awt.Point;
import java.awt.Rectangle;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Kevin
 */
public class ForgotPassword extends javax.swing.JFrame {

    /**
     * Creates new form ForgotPassword
     */
    public ForgotPassword() {
      
        initComponents();
        System.out.println("kevinbranch");
        System.out.println("station di kilala ni richard ");
    }
    
   

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        answerTxtField = new javax.swing.JTextField();
        confirmBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        secretQuestion = new javax.swing.JComboBox<>();
        userTxtfield = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        invi1 = new javax.swing.JLabel();
        invi2 = new javax.swing.JLabel();
        confirmBtn2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Forgot Password");

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("SECRET QUESTION");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 290, 100));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("USERNAME");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 290, 100));

        answerTxtField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel2.add(answerTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, 350, 60));

        confirmBtn.setText("CONFIRM");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });
        jPanel2.add(confirmBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 420, 170, 60));

        backBtn.setText("BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        jPanel2.add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 170, 60));

        secretQuestion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        secretQuestion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "What is your mother's maiden name?", "In what city were you born?", "What is the name of your first pet?", "What is your favorite movie?", "What is the name of your first love?" }));
        secretQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretQuestionActionPerformed(evt);
            }
        });
        jPanel2.add(secretQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, 350, 60));

        userTxtfield.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel2.add(userTxtfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 350, 60));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("ANSWER");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 290, 100));

        invi1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        invi1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        invi1.setText("New Password");
        jPanel2.add(invi1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 220, 100));

        invi2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        invi2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        invi2.setText("Repeat new Password");
        jPanel2.add(invi2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 330, 100));

        confirmBtn2.setText("Change Password");
        confirmBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtn2ActionPerformed(evt);
            }
        });
        jPanel2.add(confirmBtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 420, 170, 60));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(198, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(212, 212, 212))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(341, 341, 341)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 790));

        setSize(new java.awt.Dimension(1295, 798));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
  
    private String user1 = "";
    public void verifySecretQuestion(String username, String answer, String secretQuestion1) {
    String url = "jdbc:mysql://127.0.0.1:3306/database";
    String dbUsername = "root";
String dbPassword = "admin";
        try {
            // Establish the database connection
            Connection connection = DriverManager.getConnection(url, dbUsername, dbPassword);
            
            // Prepare the SQL query to retrieve the user's secret question and answer
            String query = "SELECT secret_question, secret_answer FROM users WHERE username = ?";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, username);
            
            // Execute the query
            ResultSet resultSet = preparedStatement.executeQuery();
            
            if (resultSet.next()) {
                // User found in the database, retrieve the secret question and answer
                String realSecretQuestion = resultSet.getString("secret_question");
                String realAnswer = resultSet.getString("secret_answer");
                
                // Compare the provided answer with the real answer
                if (realSecretQuestion.equals(secretQuestion1) && realAnswer.equals(answer)) {
           
  
                    JOptionPane.showMessageDialog(null, "Secret question and answer are correct.");
                    user1 = username;
          remix();
                } else {
                    JOptionPane.showMessageDialog(null, "Secret question or answer is wrong.");
                }
            } else {
                // User not found in the database
                JOptionPane.showMessageDialog(null, "User is not in the database.");
            }
            
            // Close the database connection
            connection.close();
        } catch (SQLException e) {
            // Handle any SQL exceptions
            e.printStackTrace();
        }
}
    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        String username = userTxtfield.getText();
    
    // Get the value of answerTxtField
    String answer = answerTxtField.getText();
    
    // Get the selected item from the secretQuestion combo box
    String secretQuestion1 = (String) secretQuestion.getSelectedItem();
    
    // Now you can use these variables as needed, such as for further processing or validation
    // For example:
    System.out.println("Username: " + username);
    System.out.println("Answer: " + answer);
    System.out.println("Secret Question: " + secretQuestion1);
    verifySecretQuestion(username, answer, secretQuestion1);
    }//GEN-LAST:event_confirmBtnActionPerformed

  
    public void remix() {
    // Get the positions of jLabel1 and secretQuestion
    int jLabel1X = jLabel1.getX();
    int jLabel1Y = jLabel1.getY();
    int secretQuestionX = secretQuestion.getX();
    int secretQuestionY = secretQuestion.getY();


    // Set the bounds of jLabel1 and secretQuestion to jLabel4 and answerTxtField, respectively
    jLabel1.setBounds(jLabel6.getX(), jLabel6.getY()+2000, jLabel1.getWidth(), jLabel1.getHeight());
    secretQuestion.setBounds(answerTxtField.getX(), answerTxtField.getY()+2000, secretQuestion.getWidth(), secretQuestion.getHeight());

    // Set the bounds of jLabel4 and answerTxtField to the original bounds of jLabel1 and secretQuestion
    jLabel6.setBounds(jLabel1X, jLabel1Y, jLabel6.getWidth(), jLabel6.getHeight());
    answerTxtField.setBounds(secretQuestionX, secretQuestionY, answerTxtField.getWidth(), answerTxtField.getHeight());
    
    int jLabel3X = jLabel3.getX();
    int jLabel3Y = jLabel3.getY();
    int jLabel6X = jLabel6.getX();
    int jLabel6Y = jLabel6.getY();
      invi1.setBounds(jLabel3X,jLabel3Y,jLabel3.getWidth(),jLabel3.getHeight());
     invi2.setBounds(jLabel6X,jLabel6Y,jLabel6.getWidth(),jLabel6.getHeight());
    jLabel3.setBounds(invi2.getX()+2000, invi2.getY(), invi2.getWidth(), invi2.getHeight());
    jLabel6.setBounds(invi1.getX()+2000, invi1.getY(), invi1.getWidth(), invi1.getHeight());
    userTxtfield.setText("");
    answerTxtField.setText("");
    
    confirmBtn.setBounds(confirmBtn.getX(), confirmBtn.getY()+2000, confirmBtn.getWidth(), confirmBtn.getHeight());
    backBtn.setBounds(backBtn.getX(), backBtn.getY()+2000, backBtn.getWidth(), backBtn.getHeight());
  
}

public void addPasswordChangeAuditLog(int userId) {
    String url = "jdbc:mysql://127.0.0.1:3306/database";
    String dbUsername = "root";
    String dbPassword = "admin";
    
    try {
        // Establish the database connection
        Connection connection = DriverManager.getConnection(url, dbUsername, dbPassword);
        
        // Prepare the SQL query to add password change audit log
        String query = "INSERT INTO audit_logs (userid, event, action_type) VALUES (?, 'forgot password', 'password_change')";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setInt(1, userId);
        
        // Execute the query
        int rowsAffected = preparedStatement.executeUpdate();
        
        if (rowsAffected > 0) {
            System.out.println("Password change audit log added successfully.");
        } else {
            System.out.println("Failed to add password change audit log.");
        }
        
        // Close the database connection
        connection.close();
    } catch (SQLException e) {
        // Handle any SQL exceptions
        e.printStackTrace();
    }
}

public int getUserIdByUsername(String username) {
    int userId = -1; // Default value if user ID is not found
    
    String url = "jdbc:mysql://127.0.0.1:3306/database";
    String dbUsername = "root";
    String dbPassword = "admin";
    
    try {
        // Establish the database connection
        Connection connection = DriverManager.getConnection(url, dbUsername, dbPassword);
        
        // Prepare the SQL query to retrieve user ID by username
        String query = "SELECT userid FROM users WHERE username = ?";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setString(1, username);
        
        // Execute the query
        ResultSet resultSet = preparedStatement.executeQuery();
        
        // Check if the result set has any rows
        if (resultSet.next()) {
            // Retrieve the user ID from the result set
            userId = resultSet.getInt("userid");
        }
        
        // Close the result set, statement, and connection
        resultSet.close();
        preparedStatement.close();
        connection.close();
    } catch (SQLException e) {
        // Handle any SQL exceptions
        e.printStackTrace();
    }
    
    return userId;
}

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
     new login().setVisible(true);
    setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void secretQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretQuestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secretQuestionActionPerformed

    private void confirmBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtn2ActionPerformed
      String password1 = userTxtfield.getText();
    String password2 = answerTxtField.getText();

        if (password1.equals(password2)) {
        // Passwords match, update the database
        // Call a method to update the database with the new password
        updatePasswordInDatabase(user1,password1);
    } else {
        // Passwords don't match, show a message dialog
        JOptionPane.showMessageDialog(null, "Passwords do not match. Please try again.", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_confirmBtn2ActionPerformed

    private void updatePasswordInDatabase(String username, String newPassword) {
    String url = "jdbc:mysql://127.0.0.1:3306/database";
    String dbUsername = "root";
    String dbPassword = "admin";
    
    // SQL query to update the password for the given username
    String query = "UPDATE users SET password = ? WHERE username = ?";
    
    try (Connection connection = DriverManager.getConnection(url, dbUsername, dbPassword);
         PreparedStatement preparedStatement = connection.prepareStatement(query)) {
        
        // Set parameters for the query
        preparedStatement.setString(1, newPassword);
        preparedStatement.setString(2, username);
        
        // Execute the update statement
        int rowsAffected = preparedStatement.executeUpdate();
        
if (rowsAffected > 0) {
    int userid = getUserIdByUsername(user1);
    addPasswordChangeAuditLog(userid);
    JOptionPane.showMessageDialog(null, "Password updated successfully for user: " + username, "Success", JOptionPane.INFORMATION_MESSAGE);
    new login().setVisible(true);
    setVisible(false);
} else {
    JOptionPane.showMessageDialog(null, "User not found or password not updated.", "Error", JOptionPane.ERROR_MESSAGE);
}

    } catch (SQLException e) {
        // Handle any SQL exceptions
        e.printStackTrace();
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgotPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField answerTxtField;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JButton confirmBtn2;
    private javax.swing.JLabel invi1;
    private javax.swing.JLabel invi2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> secretQuestion;
    private javax.swing.JTextField userTxtfield;
    // End of variables declaration//GEN-END:variables
}
